/*
* @Author: caiovictormc
* @Date:   2018-09-19 21:35:08
* @Last Modified by:   caiovictormc
* @Last Modified time: 2018-09-25 23:21:41
*/

#include "Glacier.h"


Glacier::Glacier() : irsend(G_OUTPUT_IR), powerStatus(false)  {}


void Glacier::begin() {
	irsend.begin();
	pinMode(G_OUTPUT_LED, OUTPUT);
}

bool Glacier::getStatus() {
	return powerStatus;
}

void Glacier::setStatus(bool status) {
	powerStatus = status;
}

void Glacier::powerOn() {
	setStatus(true);

	// uint16_t rawData[229] = {9094, 4588,  524, 1782,  504, 1780,  530, 620,  502, 658,  530, 620,  530, 620,  502, 648,  530, 1762,  530, 618,  530, 1752,  502, 1780,  528, 630,  502, 648,  502, 648,  502, 648,  530, 630,  530, 622,  528, 622,  532, 1752,  530, 630,  502, 1780,  504, 648,  500, 650,  502, 658,  502, 1782,  502, 1780,  528, 622,  528, 632,  528, 1754,  502, 1780,  530, 1754,  500, 658,  506, 646,  502, 648,  528, 622,  530, 630,  500, 650,  502, 648,  502, 650,  500, 658,  500, 648,  508, 644,  502, 650,  502, 658,  530, 620,  506, 644,  500, 650,  502, 652,  502, 8172,  528, 604,  522, 652,  530, 624,  502, 650,  530, 622,  504, 650,  530, 622,  502, 650,  502, 650,  502, 650,  526, 626,  502, 650,  506, 646,  500, 652,  502, 650,  502, 650,  506, 646,  500, 652,  502, 650,  502, 650,  500, 652,  502, 650,  502, 650,  528, 624,  530, 622,  502, 650,  526, 626,  500, 652,  502, 652,  500, 650,  530, 622,  502, 650,  502, 652,  528, 602,  522, 650,  502, 652,  502, 650,  502, 650,  532, 622,  502, 650,  502, 652,  502, 650,  502, 650,  502, 650,  528, 624,  530, 622,  532, 620,  502, 650,  502, 652,  502, 650,  502, 652,  500, 650,  530, 622,  502, 652,  500, 652,  526, 684,  526, 1756,  530, 1752,  528, 1754,  502, 658,  530, 620,  502, 1782,  502, 1780,  532, 624,  502};  // UNKNOWN 683D2DFF
	uint16_t rawData[199] = {4346, 4466,  470, 1714,  470, 624,  470, 1718,  470, 1712,  474, 622,  470, 624,  470, 1712,  470, 626,  470, 626,  470, 1718,  470, 626,  468, 628,  468, 1714,  472, 1712,  470, 626,  466, 1722,  470, 628,  470, 626,  468, 626,  470, 1714,  468, 1716,  468, 1714,  470, 1714,  470, 1716,  470, 1720,  470, 1714,  470, 1714,  468, 606,  490, 626,  470, 624,  470, 624,  470, 626,  468, 628,  468, 626,  470, 1714,  468, 626,  468, 1718,  468, 626,  470, 626,  468, 630,  468, 1716,  470, 1714,  468, 626,  468, 1718,  470, 626,  468, 1718,  468, 1714,  470, 1714,  438, 5360,  4328, 4468,  470, 1714,  468, 628,  468, 1720,  468, 1716,  466, 628,  468, 628,  466, 1716,  468, 628,  468, 628,  470, 1718,  468, 626,  468, 626,  468, 1716,  470, 1714,  468, 626,  468, 1720,  468, 630,  466, 626,  470, 626,  468, 1716,  466, 1716,  470, 1714,  468, 1716,  468, 1716,  470, 1720,  468, 1716,  470, 1714,  468, 628,  468, 628,  470, 624,  468, 626,  470, 628,  468, 628,  470, 626,  470, 1714,  470, 626,  468, 1718,  470, 626,  468, 626,  466, 630,  468, 1716,  470, 1692,  492, 626,  470, 1716,  470, 626,  468, 1720,  470, 1714,  468, 1718,  438};  // Sala The Doors 12A67518
	sendIR(rawData);
}

void Glacier::powerOff() {
	setStatus(false);

	// uint16_t rawData[229] = {9094, 4588,  524, 1782,  504, 1780,  530, 620,  502, 658,  530, 620,  530, 620,  502, 648,  530, 1762,  530, 618,  530, 1752,  502, 1780,  528, 630,  502, 648,  502, 648,  502, 648,  530, 630,  530, 622,  528, 622,  532, 1752,  530, 630,  502, 1780,  504, 648,  500, 650,  502, 658,  502, 1782,  502, 1780,  528, 622,  528, 632,  528, 1754,  502, 1780,  530, 1754,  500, 658,  506, 646,  502, 648,  528, 622,  530, 630,  500, 650,  502, 648,  502, 650,  500, 658,  500, 648,  508, 644,  502, 650,  502, 658,  530, 620,  506, 644,  500, 650,  502, 652,  502, 8172,  528, 604,  522, 652,  530, 624,  502, 650,  530, 622,  504, 650,  530, 622,  502, 650,  502, 650,  502, 650,  526, 626,  502, 650,  506, 646,  500, 652,  502, 650,  502, 650,  506, 646,  500, 652,  502, 650,  502, 650,  500, 652,  502, 650,  502, 650,  528, 624,  530, 622,  502, 650,  526, 626,  500, 652,  502, 652,  500, 650,  530, 622,  502, 650,  502, 652,  528, 602,  522, 650,  502, 652,  502, 650,  502, 650,  532, 622,  502, 650,  502, 652,  502, 650,  502, 650,  502, 650,  528, 624,  530, 622,  532, 620,  502, 650,  502, 652,  502, 650,  502, 652,  500, 650,  530, 622,  502, 652,  500, 652,  526, 684,  526, 1756,  530, 1752,  528, 1754,  502, 658,  530, 620,  502, 1782,  502, 1780,  532, 624,  502};  // UNKNOWN 683D2DFF
	uint16_t rawData[199] = {4378, 4464,  526, 1658,  526, 568,  528, 1660,  468, 1716,  526, 568,  526, 570,  468, 1716,  526, 572,  524, 572,  528, 1660,  524, 570,  468, 628,  524, 1656,  470, 1714,  470, 626,  468, 1720,  526, 572,  470, 1714,  526, 1658,  526, 1658,  526, 1658,  526, 570,  526, 1660,  528, 1658,  528, 1662,  526, 570,  526, 570,  526, 568,  528, 568,  468, 1714,  470, 624,  470, 626,  528, 1662,  468, 1716,  470, 1714,  470, 624,  470, 626,  526, 570,  526, 568,  524, 572,  524, 572,  470, 626,  526, 568,  526, 1660,  528, 1654,  526, 1658,  470, 1714,  526, 1658,  462, 5336,  4388, 4408,  470, 1714,  470, 626,  526, 1660,  470, 1714,  468, 626,  526, 570,  466, 1716,  526, 570,  470, 628,  528, 1658,  470, 626,  470, 624,  470, 1714,  470, 1714,  528, 568,  528, 1662,  526, 570,  470, 1714,  528, 1654,  470, 1714,  526, 1658,  526, 570,  526, 1662,  526, 1660,  528, 1662,  528, 566,  468, 626,  526, 570,  470, 626,  470, 1714,  468, 626,  470, 626,  526, 1664,  468, 1714,  526, 1658,  528, 568,  470, 624,  528, 568,  470, 624,  514, 584,  468, 628,  526, 568,  468, 626,  526, 1660,  470, 1712,  528, 1656,  470, 1714,  528, 1660,  460};  // The Doors B27BE0
	sendIR(rawData);
}

void Glacier::setTurbo() {
	setStatus(true);

	// uint16_t rawData[229] = {9094, 4588,  524, 1782,  504, 1780,  530, 620,  502, 658,  530, 620,  530, 620,  502, 648,  530, 1762,  530, 618,  530, 1752,  502, 1780,  528, 630,  502, 648,  502, 648,  502, 648,  530, 630,  530, 622,  528, 622,  532, 1752,  530, 630,  502, 1780,  504, 648,  500, 650,  502, 658,  502, 1782,  502, 1780,  528, 622,  528, 632,  528, 1754,  502, 1780,  530, 1754,  500, 658,  506, 646,  502, 648,  528, 622,  530, 630,  500, 650,  502, 648,  502, 650,  500, 658,  500, 648,  508, 644,  502, 650,  502, 658,  530, 620,  506, 644,  500, 650,  502, 652,  502, 8172,  528, 604,  522, 652,  530, 624,  502, 650,  530, 622,  504, 650,  530, 622,  502, 650,  502, 650,  502, 650,  526, 626,  502, 650,  506, 646,  500, 652,  502, 650,  502, 650,  506, 646,  500, 652,  502, 650,  502, 650,  500, 652,  502, 650,  502, 650,  528, 624,  530, 622,  502, 650,  526, 626,  500, 652,  502, 652,  500, 650,  530, 622,  502, 650,  502, 652,  528, 602,  522, 650,  502, 652,  502, 650,  502, 650,  532, 622,  502, 650,  502, 652,  502, 650,  502, 650,  502, 650,  528, 624,  530, 622,  532, 620,  502, 650,  502, 652,  502, 650,  502, 652,  500, 650,  530, 622,  502, 652,  500, 652,  526, 684,  526, 1756,  530, 1752,  528, 1754,  502, 658,  530, 620,  502, 1782,  502, 1780,  532, 624,  502};  // UNKNOWN 683D2DFF
	uint16_t rawData[199] = {4372, 4464,  472, 1712,  470, 624,  472, 1716,  472, 1712,  470, 626,  470, 1716,  470, 624,  472, 1718,  472, 626,  470, 1712,  472, 622,  470, 626,  470, 1712,  472, 624,  470, 1716,  472, 626,  470, 1714,  472, 1712,  470, 1712,  472, 1712,  470, 626,  470, 1716,  472, 622,  470, 1720,  470, 626,  470, 624,  470, 624,  470, 624,  472, 1716,  470, 624,  472, 1716,  470, 626,  470, 1714,  470, 626,  470, 1716,  472, 624,  470, 624,  470, 624,  470, 1716,  472, 626,  470, 626,  470, 1718,  470, 626,  468, 1718,  470, 1712,  470, 1712,  472, 624,  470, 1718,  438, 5336,  4328, 4464,  472, 1714,  470, 624,  472, 1716,  472, 1712,  472, 624,  470, 1716,  470, 624,  470, 1718,  468, 628,  470, 1712,  470, 624,  470, 624,  470, 1712,  472, 622,  472, 1716,  470, 626,  472, 1714,  470, 1712,  470, 1714,  470, 1714,  470, 624,  472, 1716,  470, 626,  472, 1718,  470, 626,  472, 624,  470, 624,  470, 624,  470, 1716,  472, 624,  470, 1716,  470, 626,  470, 1714,  470, 624,  472, 1714,  470, 626,  470, 624,  468, 624,  470, 1716,  470, 628,  470, 626,  470, 1716,  470, 624,  470, 1716,  472, 1688,  492, 1716,  470, 626,  468, 1720,  462};  // Sala The Doors 476672D8
	sendIR(rawData);
}

void Glacier::notifyLed() {
	digitalWrite(G_OUTPUT_LED, HIGH);
	delay(100);
	digitalWrite(G_OUTPUT_LED, LOW);
}

void Glacier::sendIR(uint16_t *rawCode) {
	notifyLed();
	irsend.sendRaw(rawCode, 229, 38000);
}