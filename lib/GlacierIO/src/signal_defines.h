#pragma once

// IR_COMMAND (buf: An array of uint16_t's that has microseconds elements)
// SIGNAL_ARRAY_SIZE (len: Nr. of elements in the buf[] array)
// SIGNAL_FREQUENCY (hz: Frequency to send the message at. (kHz < 1000; Hz >= 1000))

// TESTS
#ifndef GLACIER_MODEL
#define SIGNAL_ARRAY_SIZE  0
#define SIGNAL_FREQUENCY   0
#define IR_POWER_ON        {}
#define IR_POWER_OFF       {}

// Springer
#elif GLACIER_MODEL == SPRINGER
#define SIGNAL_ARRAY_SIZE  199
#define SIGNAL_FREQUENCY   38000
#define IR_POWER_ON        {4346, 4466,  470, 1714,  470, 624,  470, 1718,  470, 1712,  474, 622,  470, 624,  470, 1712,  470, 626,  470, 626,  470, 1718,  470, 626,  468, 628,  468, 1714,  472, 1712,  470, 626,  466, 1722,  470, 628,  470, 626,  468, 626,  470, 1714,  468, 1716,  468, 1714,  470, 1714,  470, 1716,  470, 1720,  470, 1714,  470, 1714,  468, 606,  490, 626,  470, 624,  470, 624,  470, 626,  468, 628,  468, 626,  470, 1714,  468, 626,  468, 1718,  468, 626,  470, 626,  468, 630,  468, 1716,  470, 1714,  468, 626,  468, 1718,  470, 626,  468, 1718,  468, 1714,  470, 1714,  438, 5360,  4328, 4468,  470, 1714,  468, 628,  468, 1720,  468, 1716,  466, 628,  468, 628,  466, 1716,  468, 628,  468, 628,  470, 1718,  468, 626,  468, 626,  468, 1716,  470, 1714,  468, 626,  468, 1720,  468, 630,  466, 626,  470, 626,  468, 1716,  466, 1716,  470, 1714,  468, 1716,  468, 1716,  470, 1720,  468, 1716,  470, 1714,  468, 628,  468, 628,  470, 624,  468, 626,  470, 628,  468, 628,  470, 626,  470, 1714,  470, 626,  468, 1718,  470, 626,  468, 626,  466, 630,  468, 1716,  470, 1692,  492, 626,  470, 1716,  470, 626,  468, 1720,  470, 1714,  468, 1718,  438};
#define IR_POWER_OFF       {4378, 4464,  526, 1658,  526, 568,  528, 1660,  468, 1716,  526, 568,  526, 570,  468, 1716,  526, 572,  524, 572,  528, 1660,  524, 570,  468, 628,  524, 1656,  470, 1714,  470, 626,  468, 1720,  526, 572,  470, 1714,  526, 1658,  526, 1658,  526, 1658,  526, 570,  526, 1660,  528, 1658,  528, 1662,  526, 570,  526, 570,  526, 568,  528, 568,  468, 1714,  470, 624,  470, 626,  528, 1662,  468, 1716,  470, 1714,  470, 624,  470, 626,  526, 570,  526, 568,  524, 572,  524, 572,  470, 626,  526, 568,  526, 1660,  528, 1654,  526, 1658,  470, 1714,  526, 1658,  462, 5336,  4388, 4408,  470, 1714,  470, 626,  526, 1660,  470, 1714,  468, 626,  526, 570,  466, 1716,  526, 570,  470, 628,  528, 1658,  470, 626,  470, 624,  470, 1714,  470, 1714,  528, 568,  528, 1662,  526, 570,  470, 1714,  528, 1654,  470, 1714,  526, 1658,  526, 570,  526, 1662,  526, 1660,  528, 1662,  528, 566,  468, 626,  526, 570,  470, 626,  470, 1714,  468, 626,  470, 626,  526, 1664,  468, 1714,  526, 1658,  528, 568,  470, 624,  528, 568,  470, 624,  514, 584,  468, 628,  526, 568,  468, 626,  526, 1660,  470, 1712,  528, 1656,  470, 1714,  528, 1660,  460};

#endif
